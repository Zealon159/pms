<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:task="http://www.springframework.org/schema/task" 
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   		http://www.springframework.org/schema/beans/spring-beans.xsd 
   		http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/task
       	http://www.springframework.org/schema/task/spring-task-4.1.xsd">
        
 	<!-- 扫描service组件 --> 
    <context:component-scan base-package="cn.corpdata.pms.service.**" >
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    
    <context:annotation-config />
    
    <!-- 分解属性文件 properites  -->  
    <context:property-placeholder location="classpath:application.properties" />
    
 	<!-- 事务管理  -->
 	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> 
 	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource" />
	</bean>
    
    <!-- 数据源 dbcp -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="testWhileIdle"><value>true</value></property>
		<property name="testOnBorrow"><value>false</value></property>
		<property name="testOnReturn"><value>false</value></property>
		<property name="validationQuery"><value>select 1</value>  </property>
		<property name="timeBetweenEvictionRunsMillis"><value>${dbcp.timeBetweenEvictionRunsMillis}</value></property>
		<property name="numTestsPerEvictionRun"><value>${dbcp.numTestsPerEvictionRun}</value></property>
		<property name="maxActive"><value>${dbcp.maxActive}</value></property>
	</bean>  
 
    <!-- sessionFactory 将spring和mybatis整合  -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:cn/corpdata/pms/mapper/*/*Mapper.xml" />  
        <property name="configLocation" value="classpath:config/spring-mybatis.xml" />  
    </bean>  
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="cn.corpdata.pms.dao.**" />   
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>  
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
			<property name="defaultEncoding" value="utf-8" />  
			<property name="maxUploadSize" value="10485760000" />  
			<property name="maxInMemorySize" value="40960" />  
	</bean>
	
    <!-- task任务扫描注解 -->
    <task:annotation-driven />
    
    <!-- 500错误页面 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.exception">ExceptionPage/500</prop>
			</props>
		</property>
	</bean>
    
    <!-- 读取属性文件 -->
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>
    
    <!-- redis  config  start -->  
    <!-- 配置JedisPoolConfig实例 
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="300" />  
        <property name="maxTotal" value="600" />  
        <property name="maxWaitMillis" value="1000" />  
        <property name="testOnBorrow" value="true" />  
    </bean>  
       --> 
    <!-- 配置JedisConnectionFactory 
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="localhost"/>  
        <property name="port" value="6379"/>  
        <property name="database" value="0"/>  
        <property name="poolConfig" ref="poolConfig"/>  
    </bean>  
      -->  
    <!-- 配置RedisTemplate  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory" />  
    </bean>   
      -->
    <!-- 配置RedisCacheManager 
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
         <constructor-arg name="redisOperations" ref="redisTemplate" />  
        <property name="defaultExpiration" value="3000"/>  
    </bean>   
      --> 
    <!-- 配置RedisCacheConfig   
    <bean id="redisCacheConfig" class="com.zealon.cache.redis.RedisCacheConfig">  
        <constructor-arg ref="jedisConnectionFactory" />  
        <constructor-arg ref="redisTemplate" />  
        <constructor-arg ref="redisCacheManager" />  
    </bean>  
      -->
    <!-- redis  config  end --> 
</beans>